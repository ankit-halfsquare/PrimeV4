class Temptable(models.Model):
    order_within_task_group = models.IntegerField(blank=True, null=True)
    task_group_id = models.IntegerField(blank=True, null=True)
    measurement_collection_description = models.CharField(max_length=255, blank=True, null=True)
    measurement_collection_type = models.CharField(max_length=255, blank=True, null=True)
    selection_list_id = models.IntegerField(blank=True, null=True)
    min_acceptance_criteria = models.CharField(max_length=255, blank=True, null=True)
    max_acceptance_criteria = models.CharField(max_length=255, blank=True, null=True)
    displayed_unit = models.CharField(max_length=255, blank=True, null=True)
    adf_form_instance_id = models.IntegerField(blank=True, null=True)
    project_id = models.IntegerField(blank=True, null=True)
    building_id = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'TempTable'


class AccountProfile(models.Model):
    id = models.BigAutoField(primary_key=True)
    date_of_birth = models.DateField(blank=True, null=True)
    photo = models.CharField(max_length=100)
    user = models.OneToOneField('AuthUser', models.DO_NOTHING)

    class Meta:
        managed = False
        db_table = 'account_profile'



class AdfFormInstance(models.Model):
    create_date = models.DateTimeField(blank=True, null=True)
    create_user = models.IntegerField(blank=True, null=True)
    update_date = models.DateTimeField(blank=True, null=True)
    update_user = models.IntegerField(blank=True, null=True)
    obsolete = models.SmallIntegerField(blank=True, null=True)
    name = models.CharField(max_length=50, blank=True, null=True)
    code = models.CharField(max_length=50, blank=True, null=True)
    status = models.CharField(max_length=255, blank=True, null=True)
    adf_form_template_id = models.IntegerField(blank=True, null=True)
    project_id = models.IntegerField(blank=True, null=True)
    building_id = models.IntegerField(blank=True, null=True)
    complete_state = models.IntegerField(blank=True, null=True)
    signature = models.BinaryField(blank=True, null=True)
    signature2 = models.BinaryField(blank=True, null=True)
    signature3 = models.BinaryField(blank=True, null=True)
    signature4 = models.BinaryField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'adf_form_instance'



class AdfFormInstanceField(models.Model):
    adf_form_instance = models.ForeignKey(AdfFormInstance, models.DO_NOTHING, blank=True, null=True)
    order_within_task_group = models.IntegerField(blank=True, null=True)
    task_group_id = models.IntegerField(blank=True, null=True)
    measurement_collection_description = models.CharField(max_length=255, blank=True, null=True)
    measurement_collection_type = models.CharField(max_length=255, blank=True, null=True)
    selection_list_id = models.IntegerField(blank=True, null=True)
    min_acceptance_criteria = models.CharField(max_length=255, blank=True, null=True)
    max_acceptance_criteria = models.CharField(max_length=255, blank=True, null=True)
    displayed_unit = models.CharField(max_length=255, blank=True, null=True)
    status = models.CharField(max_length=255, blank=True, null=True)
    task_group_completion_date = models.DateField(blank=True, null=True)
    task_group_start_date_completion_date = models.DateField(blank=True, null=True)
    selection_list_item = models.CharField(max_length=255, blank=True, null=True)
    people_id = models.IntegerField(blank=True, null=True)
    instrument_id = models.IntegerField(blank=True, null=True)
    yes_no = models.IntegerField(blank=True, null=True)
    date = models.DateField(blank=True, null=True)
    date_time = models.DateTimeField(blank=True, null=True)
    specified_number = models.DecimalField(max_digits=18, decimal_places=4, blank=True, null=True)
    non_specified_number = models.DecimalField(max_digits=18, decimal_places=4, blank=True, null=True)
    text_mandatory = models.CharField(max_length=255, blank=True, null=True)
    text_non_mandatory = models.CharField(max_length=255, blank=True, null=True)
    file_attachment_mandatory = models.CharField(max_length=512, blank=True, null=True)
    file_attachment_non_mandatory = models.CharField(max_length=512, blank=True, null=True)
    project_id = models.IntegerField(blank=True, null=True)
    building_id = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'adf_form_instance_field'


class AdfFormTemplate(models.Model):
    create_date = models.DateTimeField(blank=True, null=True)
    create_user = models.IntegerField(blank=True, null=True)
    update_date = models.DateTimeField(blank=True, null=True)
    update_user = models.IntegerField(blank=True, null=True)
    obsolete = models.SmallIntegerField(blank=True, null=True)
    name = models.CharField(max_length=512, blank=True, null=True)
    code = models.CharField(max_length=512, blank=True, null=True)
    json_content = models.TextField(blank=True, null=True)
    project_id = models.IntegerField(blank=True, null=True)
    description = models.CharField(max_length=255, blank=True, null=True)
    status = models.CharField(max_length=255, blank=True, null=True)
    version = models.IntegerField(blank=True, null=True)
    building_id = models.IntegerField(blank=True, null=True)
    signature_label = models.CharField(max_length=255, blank=True, null=True)
    signature2_label = models.CharField(max_length=255, blank=True, null=True)
    signature3_label = models.CharField(max_length=255, blank=True, null=True)
    signature4_label = models.CharField(max_length=255, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'adf_form_template'


class AdfFormTemplateField(models.Model):
    adf_form_template = models.ForeignKey(AdfFormTemplate, models.DO_NOTHING, blank=True, null=True)
    order_within_task_group = models.IntegerField(blank=True, null=True)
    task_group_id = models.IntegerField(blank=True, null=True)
    measurement_collection_description = models.CharField(max_length=255, blank=True, null=True)
    measurement_collection_type = models.CharField(max_length=255, blank=True, null=True)
    selection_list_id = models.IntegerField(blank=True, null=True)
    min_acceptance_criteria = models.CharField(max_length=255, blank=True, null=True)
    max_acceptance_criteria = models.CharField(max_length=255, blank=True, null=True)
    displayed_unit = models.CharField(max_length=255, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'adf_form_template_field'


class AdtfScratchTable(models.Model):
    measurement_collection_description = models.CharField(max_length=256)
    result = models.CharField(max_length=255, blank=True, null=True)
    result_parameters = models.CharField(max_length=255, blank=True, null=True)
    status = models.CharField(max_length=255, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'adtf_scratch_table'


class AuditTrail(models.Model):
    app_key = models.IntegerField(blank=True, null=True)
    app = models.CharField(max_length=50, blank=True, null=True)
    details = models.TextField(blank=True, null=True)  # This field type is a guess.
    insert_user = models.IntegerField(blank=True, null=True)
    create_datetime = models.DateTimeField(blank=True, null=True)
    action = models.CharField(max_length=20, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'audit_trail'


class AuthGroup(models.Model):
    name = models.CharField(unique=True, max_length=150)

    class Meta:
        managed = False
        db_table = 'auth_group'


class AuthGroupPermissions(models.Model):
    id = models.BigAutoField(primary_key=True)
    group = models.ForeignKey(AuthGroup, models.DO_NOTHING)
    permission = models.ForeignKey('AuthPermission', models.DO_NOTHING)

    class Meta:
        managed = False
        db_table = 'auth_group_permissions'
        unique_together = (('group', 'permission'),)


class AuthPermission(models.Model):
    name = models.CharField(max_length=255)
    content_type = models.ForeignKey('DjangoContentType', models.DO_NOTHING)
    codename = models.CharField(max_length=100)

    class Meta:
        managed = False
        db_table = 'auth_permission'
        unique_together = (('content_type', 'codename'),)


class AuthUser(models.Model):
    password = models.CharField(max_length=128)
    last_login = models.DateTimeField(blank=True, null=True)
    is_superuser = models.BooleanField()
    username = models.CharField(unique=True, max_length=150)
    first_name = models.CharField(max_length=150)
    last_name = models.CharField(max_length=150)
    email = models.CharField(max_length=254)
    is_staff = models.BooleanField()
    is_active = models.BooleanField()
    date_joined = models.DateTimeField()

    class Meta:
        managed = False
        db_table = 'auth_user'


class AuthUserGroups(models.Model):
    id = models.BigAutoField(primary_key=True)
    user = models.ForeignKey(AuthUser, models.DO_NOTHING)
    group = models.ForeignKey(AuthGroup, models.DO_NOTHING)

    class Meta:
        managed = False
        db_table = 'auth_user_groups'
        unique_together = (('user', 'group'),)


class AuthUserUserPermissions(models.Model):
    id = models.BigAutoField(primary_key=True)
    user = models.ForeignKey(AuthUser, models.DO_NOTHING)
    permission = models.ForeignKey(AuthPermission, models.DO_NOTHING)

    class Meta:
        managed = False
        db_table = 'auth_user_user_permissions'
        unique_together = (('user', 'permission'),)




class Building(models.Model):
    organization_id = models.IntegerField(blank=True, null=True)
    name = models.CharField(max_length=50, blank=True, null=True)
    code = models.CharField(max_length=50, blank=True, null=True)
    city = models.CharField(max_length=50, blank=True, null=True)
    state = models.CharField(max_length=50, blank=True, null=True)
    country = models.CharField(max_length=50, blank=True, null=True)
    status = models.CharField(max_length=50, blank=True, null=True)
    create_date = models.DateTimeField(blank=True, null=True)
    create_user = models.IntegerField(blank=True, null=True)
    update_date = models.DateTimeField(blank=True, null=True)
    update_user = models.IntegerField(blank=True, null=True)
    obsolete = models.SmallIntegerField(blank=True, null=True)
    comments = models.TextField(blank=True, null=True)
    ta1_alias = models.CharField(max_length=255, blank=True, null=True)
    ta2_alias = models.CharField(max_length=255, blank=True, null=True)
    ta3_alias = models.CharField(max_length=255, blank=True, null=True)
    ta4_alias = models.CharField(max_length=255, blank=True, null=True)
    ta5_alias = models.CharField(max_length=255, blank=True, null=True)
    ta6_alias = models.CharField(max_length=255, blank=True, null=True)
    ta7_alias = models.CharField(max_length=255, blank=True, null=True)
    ta8_alias = models.CharField(max_length=255, blank=True, null=True)
    ta9_alias = models.CharField(max_length=255, blank=True, null=True)
    ta10_alias = models.CharField(max_length=255, blank=True, null=True)
    ta11_alias = models.CharField(max_length=255, blank=True, null=True)
    ta12_alias = models.CharField(max_length=255, blank=True, null=True)
    ta13_alias = models.CharField(max_length=255, blank=True, null=True)
    ta14_alias = models.CharField(max_length=255, blank=True, null=True)
    ta15_alias = models.CharField(max_length=255, blank=True, null=True)
    ta16_alias = models.CharField(max_length=255, blank=True, null=True)
    ta17_alias = models.CharField(max_length=255, blank=True, null=True)
    ta18_alias = models.CharField(max_length=255, blank=True, null=True)
    ta19_alias = models.CharField(max_length=255, blank=True, null=True)
    ta20_alias = models.CharField(max_length=255, blank=True, null=True)
    sl1_alias = models.CharField(max_length=255, blank=True, null=True)
    sl1_list = models.IntegerField(blank=True, null=True)
    sl2_alias = models.CharField(max_length=255, blank=True, null=True)
    sl2_list = models.IntegerField(blank=True, null=True)
    sl3_alias = models.CharField(max_length=255, blank=True, null=True)
    sl3_list = models.IntegerField(blank=True, null=True)
    sl4_alias = models.CharField(max_length=255, blank=True, null=True)
    sl4_list = models.IntegerField(blank=True, null=True)
    sl5_alias = models.CharField(max_length=255, blank=True, null=True)
    sl5_list = models.IntegerField(blank=True, null=True)
    sl6_alias = models.CharField(max_length=255, blank=True, null=True)
    sl6_list = models.IntegerField(blank=True, null=True)
    sl7_alias = models.CharField(max_length=255, blank=True, null=True)
    sl7_list = models.IntegerField(blank=True, null=True)
    sl8_alias = models.CharField(max_length=255, blank=True, null=True)
    sl8_list = models.IntegerField(blank=True, null=True)
    sl9_alias = models.CharField(max_length=255, blank=True, null=True)
    sl9_list = models.IntegerField(blank=True, null=True)
    sl10_alias = models.CharField(max_length=255, blank=True, null=True)
    sl10_list = models.IntegerField(blank=True, null=True)
    sl11_alias = models.CharField(max_length=255, blank=True, null=True)
    sl11_list = models.IntegerField(blank=True, null=True)
    sl12_alias = models.CharField(max_length=255, blank=True, null=True)
    sl12_list = models.IntegerField(blank=True, null=True)
    sl13_alias = models.CharField(max_length=255, blank=True, null=True)
    sl13_list = models.IntegerField(blank=True, null=True)
    sl14_alias = models.CharField(max_length=255, blank=True, null=True)
    sl14_list = models.IntegerField(blank=True, null=True)
    sl15_alias = models.CharField(max_length=255, blank=True, null=True)
    sl15_list = models.IntegerField(blank=True, null=True)
    sl16_alias = models.CharField(max_length=255, blank=True, null=True)
    sl16_list = models.IntegerField(blank=True, null=True)
    sl17_alias = models.CharField(max_length=255, blank=True, null=True)
    sl17_list = models.IntegerField(blank=True, null=True)
    sl18_alias = models.CharField(max_length=255, blank=True, null=True)
    sl18_list = models.IntegerField(blank=True, null=True)
    sl19_alias = models.CharField(max_length=255, blank=True, null=True)
    sl19_list = models.IntegerField(blank=True, null=True)
    sl20_alias = models.CharField(max_length=255, blank=True, null=True)
    sl20_list = models.IntegerField(blank=True, null=True)
    zip = models.CharField(max_length=128, blank=True, null=True)
    guid = models.CharField(max_length=36, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'building'



class BuildingAccessLevel(models.Model):
    name = models.CharField(max_length=255, blank=True, null=True)
    building_id = models.IntegerField(blank=True, null=True)
    obsolete = models.SmallIntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'building_access_level'


class BuildingAccessLevelUser(models.Model):
    building_access_level = models.ForeignKey(BuildingAccessLevel, models.DO_NOTHING, blank=True, null=True)
    user_id = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'building_access_level_user'


class BuildingAccessLevelView(models.Model):
    building_access_level = models.ForeignKey(BuildingAccessLevel, models.DO_NOTHING, db_column='building_access_level', blank=True, null=True)
    view_id = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'building_access_level_view'


class BuildingController(models.Model):
    building_id = models.IntegerField(blank=True, null=True)
    user_id = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'building_controller'


class BuildingEmailHelp(models.Model):
    email = models.CharField(max_length=255, blank=True, null=True)
    building_id = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'building_email_help'


class BuildingEmailHelpRequest(models.Model):
    comment = models.TextField(blank=True, null=True)  # This field type is a guess.
    component = models.CharField(max_length=255, blank=True, null=True)
    userid = models.CharField(max_length=255, blank=True, null=True)
    request_datetime = models.DateField(blank=True, null=True)
    building_id = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'building_email_help_request'





class BuildingItem(models.Model):
    building_id = models.IntegerField(blank=True, null=True)
    name = models.CharField(max_length=512, blank=True, null=True)
    parent_building_item = models.IntegerField(blank=True, null=True)
    people_id = models.IntegerField(blank=True, null=True)
    code = models.CharField(max_length=788, blank=True, null=True)
    comments = models.TextField(blank=True, null=True)
    ta1 = models.CharField(max_length=768, blank=True, null=True)
    ta2 = models.CharField(max_length=768, blank=True, null=True)
    ta3 = models.CharField(max_length=768, blank=True, null=True)
    ta4 = models.CharField(max_length=768, blank=True, null=True)
    ta5 = models.CharField(max_length=768, blank=True, null=True)
    ta6 = models.CharField(max_length=768, blank=True, null=True)
    ta7 = models.CharField(max_length=768, blank=True, null=True)
    ta8 = models.CharField(max_length=768, blank=True, null=True)
    ta9 = models.CharField(max_length=768, blank=True, null=True)
    ta10 = models.CharField(max_length=768, blank=True, null=True)
    ta11 = models.CharField(max_length=768, blank=True, null=True)
    ta12 = models.CharField(max_length=768, blank=True, null=True)
    ta13 = models.CharField(max_length=768, blank=True, null=True)
    ta14 = models.CharField(max_length=768, blank=True, null=True)
    ta15 = models.CharField(max_length=768, blank=True, null=True)
    ta16 = models.CharField(max_length=768, blank=True, null=True)
    ta17 = models.CharField(max_length=768, blank=True, null=True)
    ta18 = models.CharField(max_length=768, blank=True, null=True)
    ta19 = models.CharField(max_length=768, blank=True, null=True)
    ta20 = models.CharField(max_length=768, blank=True, null=True)
    sl1 = models.IntegerField(blank=True, null=True)
    sl2 = models.IntegerField(blank=True, null=True)
    sl3 = models.IntegerField(blank=True, null=True)
    sl4 = models.IntegerField(blank=True, null=True)
    sl5 = models.IntegerField(blank=True, null=True)
    sl6 = models.IntegerField(blank=True, null=True)
    sl7 = models.IntegerField(blank=True, null=True)
    sl8 = models.IntegerField(blank=True, null=True)
    sl9 = models.IntegerField(blank=True, null=True)
    sl10 = models.IntegerField(blank=True, null=True)
    sl11 = models.IntegerField(blank=True, null=True)
    sl12 = models.IntegerField(blank=True, null=True)
    sl13 = models.IntegerField(blank=True, null=True)
    sl14 = models.IntegerField(blank=True, null=True)
    sl15 = models.IntegerField(blank=True, null=True)
    sl16 = models.IntegerField(blank=True, null=True)
    sl17 = models.IntegerField(blank=True, null=True)
    sl18 = models.IntegerField(blank=True, null=True)
    sl19 = models.IntegerField(blank=True, null=True)
    sl20 = models.IntegerField(blank=True, null=True)
    obsolete = models.SmallIntegerField(blank=True, null=True)
    create_date = models.DateTimeField(blank=True, null=True)
    create_user = models.IntegerField(blank=True, null=True)
    update_date = models.DateTimeField(blank=True, null=True)
    update_user = models.IntegerField(blank=True, null=True)
    guid = models.CharField(max_length=36, blank=True, null=True)
    additional_data_type_form_instance_id = models.IntegerField(blank=True, null=True)
    additional_data_type_form_name = models.CharField(max_length=255, blank=True, null=True)
    building_item_category_id = models.IntegerField(blank=True, null=True)
    batch_id = models.CharField(max_length=255, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'building_item'


class BuildingItem110422(models.Model):
    building_id = models.IntegerField(blank=True, null=True)
    name = models.CharField(max_length=512, blank=True, null=True)
    parent_building_item = models.IntegerField(blank=True, null=True)
    people_id = models.IntegerField(blank=True, null=True)
    code = models.CharField(max_length=788, blank=True, null=True)
    comments = models.TextField(blank=True, null=True)
    ta1 = models.CharField(max_length=768, blank=True, null=True)
    ta2 = models.CharField(max_length=768, blank=True, null=True)
    ta3 = models.CharField(max_length=768, blank=True, null=True)
    ta4 = models.CharField(max_length=768, blank=True, null=True)
    ta5 = models.CharField(max_length=768, blank=True, null=True)
    ta6 = models.CharField(max_length=768, blank=True, null=True)
    ta7 = models.CharField(max_length=768, blank=True, null=True)
    ta8 = models.CharField(max_length=768, blank=True, null=True)
    ta9 = models.CharField(max_length=768, blank=True, null=True)
    ta10 = models.CharField(max_length=768, blank=True, null=True)
    ta11 = models.CharField(max_length=768, blank=True, null=True)
    ta12 = models.CharField(max_length=768, blank=True, null=True)
    ta13 = models.CharField(max_length=768, blank=True, null=True)
    ta14 = models.CharField(max_length=768, blank=True, null=True)
    ta15 = models.CharField(max_length=768, blank=True, null=True)
    ta16 = models.CharField(max_length=768, blank=True, null=True)
    ta17 = models.CharField(max_length=768, blank=True, null=True)
    ta18 = models.CharField(max_length=768, blank=True, null=True)
    ta19 = models.CharField(max_length=768, blank=True, null=True)
    ta20 = models.CharField(max_length=768, blank=True, null=True)
    sl1 = models.IntegerField(blank=True, null=True)
    sl2 = models.IntegerField(blank=True, null=True)
    sl3 = models.IntegerField(blank=True, null=True)
    sl4 = models.IntegerField(blank=True, null=True)
    sl5 = models.IntegerField(blank=True, null=True)
    sl6 = models.IntegerField(blank=True, null=True)
    sl7 = models.IntegerField(blank=True, null=True)
    sl8 = models.IntegerField(blank=True, null=True)
    sl9 = models.IntegerField(blank=True, null=True)
    sl10 = models.IntegerField(blank=True, null=True)
    sl11 = models.IntegerField(blank=True, null=True)
    sl12 = models.IntegerField(blank=True, null=True)
    sl13 = models.IntegerField(blank=True, null=True)
    sl14 = models.IntegerField(blank=True, null=True)
    sl15 = models.IntegerField(blank=True, null=True)
    sl16 = models.IntegerField(blank=True, null=True)
    sl17 = models.IntegerField(blank=True, null=True)
    sl18 = models.IntegerField(blank=True, null=True)
    sl19 = models.IntegerField(blank=True, null=True)
    sl20 = models.IntegerField(blank=True, null=True)
    obsolete = models.SmallIntegerField(blank=True, null=True)
    create_date = models.DateTimeField(blank=True, null=True)
    create_user = models.IntegerField(blank=True, null=True)
    update_date = models.DateTimeField(blank=True, null=True)
    update_user = models.IntegerField(blank=True, null=True)
    guid = models.CharField(max_length=36, blank=True, null=True)
    additional_data_type_form_instance_id = models.IntegerField(blank=True, null=True)
    additional_data_type_form_name = models.CharField(max_length=255, blank=True, null=True)
    building_item_category_id = models.IntegerField(blank=True, null=True)
    batch_id = models.CharField(max_length=255, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'building_item_110422'


class BuildingItemCategory(models.Model):
    name = models.CharField(max_length=255, blank=True, null=True)
    building_id = models.IntegerField(blank=True, null=True)
    obsolete = models.SmallIntegerField(blank=True, null=True)
    color_id = models.CharField(max_length=20, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'building_item_category'


class BuildingItemParentChild(models.Model):
    building_item_id_parent = models.IntegerField(blank=True, null=True)
    building_item_id_child = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'building_item_parent_child'


class BuildingProject(models.Model):
    building_id = models.IntegerField(blank=True, null=True)
    project_id = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'building_project'


class BuildingSelectionList(models.Model):
    building_id = models.IntegerField(blank=True, null=True)
    name = models.CharField(max_length=100, blank=True, null=True)
    code = models.CharField(max_length=50, blank=True, null=True)
    create_date = models.DateTimeField(blank=True, null=True)
    create_user = models.IntegerField(blank=True, null=True)
    update_date = models.DateTimeField(blank=True, null=True)
    update_user = models.IntegerField(blank=True, null=True)
    obsolete = models.SmallIntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'building_selection_list'


class BuildingSelectionListItem(models.Model):
    building_selection_list_id = models.IntegerField(blank=True, null=True)
    name = models.CharField(max_length=125, blank=True, null=True)
    code = models.CharField(max_length=125, blank=True, null=True)
    create_date = models.DateTimeField(blank=True, null=True)
    create_user = models.IntegerField(blank=True, null=True)
    update_date = models.DateTimeField(blank=True, null=True)
    update_user = models.IntegerField(blank=True, null=True)
    obsolete = models.SmallIntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'building_selection_list_item'


class ColorMaster(models.Model):
    color_id = models.CharField(max_length=255, blank=True, null=True)
    background_color_hex = models.CharField(max_length=255, blank=True, null=True)
    background_color = models.CharField(max_length=255, blank=True, null=True)
    text_color_hex = models.CharField(max_length=255, blank=True, null=True)
    text_color = models.CharField(max_length=255, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'color_master'


class DjangoAdminLog(models.Model):
    action_time = models.DateTimeField()
    object_id = models.TextField(blank=True, null=True)
    object_repr = models.CharField(max_length=200)
    action_flag = models.SmallIntegerField()
    change_message = models.TextField()
    content_type = models.ForeignKey('DjangoContentType', models.DO_NOTHING, blank=True, null=True)
    user = models.ForeignKey(AuthUser, models.DO_NOTHING)

    class Meta:
        managed = False
        db_table = 'django_admin_log'


class DjangoContentType(models.Model):
    app_label = models.CharField(max_length=100)
    model = models.CharField(max_length=100)

    class Meta:
        managed = False
        db_table = 'django_content_type'
        unique_together = (('app_label', 'model'),)


class DjangoMigrations(models.Model):
    id = models.BigAutoField(primary_key=True)
    app = models.CharField(max_length=255)
    name = models.CharField(max_length=255)
    applied = models.DateTimeField()

    class Meta:
        managed = False
        db_table = 'django_migrations'




    class DjangoSession(models.Model):
    session_key = models.CharField(primary_key=True, max_length=40)
    session_data = models.TextField()
    expire_date = models.DateTimeField()

    class Meta:
        managed = False
        db_table = 'django_session'


class File(models.Model):
    table_key = models.IntegerField(blank=True, null=True)
    table_name = models.CharField(max_length=50, blank=True, null=True)
    url = models.CharField(max_length=512, blank=True, null=True)
    description = models.CharField(max_length=512, blank=True, null=True)
    project_id = models.IntegerField(blank=True, null=True)
    file_type = models.CharField(max_length=256, blank=True, null=True)
    file_name = models.CharField(max_length=512, blank=True, null=True)
    create_date = models.DateTimeField(blank=True, null=True)
    create_user = models.IntegerField(blank=True, null=True)
    update_date = models.DateTimeField(blank=True, null=True)
    update_user = models.IntegerField(blank=True, null=True)
    obsolete = models.SmallIntegerField(blank=True, null=True)
    building_id = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'file'


class MenuSystem(models.Model):
    html = models.CharField(max_length=255, blank=True, null=True)
    icon = models.CharField(max_length=255, blank=True, null=True)
    action = models.CharField(max_length=255, blank=True, null=True)
    parent_id = models.IntegerField(blank=True, null=True)
    security_groups = models.CharField(max_length=1024, blank=True, null=True)
    value = models.CharField(max_length=255, blank=True, null=True)
    js_function = models.CharField(max_length=512, blank=True, null=True)
    sequence = models.IntegerField(blank=True, null=True)
    opened = models.BooleanField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'menu_system'


class NonWorkingDays(models.Model):
    obsolete = models.SmallIntegerField(blank=True, null=True)
    create_date = models.DateTimeField(blank=True, null=True)
    create_user = models.IntegerField(blank=True, null=True)
    update_date = models.DateTimeField(blank=True, null=True)
    update_user = models.IntegerField(blank=True, null=True)
    project_id = models.IntegerField(blank=True, null=True)
    value_day = models.CharField(max_length=50, blank=True, null=True)
    value_date = models.DateField(blank=True, null=True)
    day_or_date = models.CharField(max_length=4, blank=True, null=True)
    value_display = models.CharField(max_length=50, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'non_working_days'


class Organization(models.Model):
    name = models.CharField(max_length=50, blank=True, null=True)
    code = models.CharField(max_length=50, blank=True, null=True)
    organization_administrator = models.IntegerField(blank=True, null=True)
    customer_company = models.CharField(max_length=50, blank=True, null=True)
    city = models.CharField(max_length=50, blank=True, null=True)
    state = models.CharField(max_length=50, blank=True, null=True)
    country = models.CharField(max_length=50, blank=True, null=True)
    create_date = models.DateTimeField(blank=True, null=True)
    create_user = models.IntegerField(blank=True, null=True)
    update_date = models.DateTimeField(blank=True, null=True)
    update_user = models.IntegerField(blank=True, null=True)
    active = models.SmallIntegerField(blank=True, null=True)
    comments = models.TextField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'organization'


class People(models.Model):
    name_first = models.CharField(max_length=50, blank=True, null=True)
    name_last = models.CharField(max_length=50, blank=True, null=True)
    resume_file_name = models.CharField(max_length=50, blank=True, null=True)
    current_latest_position = models.CharField(max_length=50, blank=True, null=True)
    city = models.CharField(max_length=50, blank=True, null=True)
    state = models.CharField(max_length=50, blank=True, null=True)
    country = models.CharField(max_length=10, blank=True, null=True)
    phone = models.CharField(max_length=50, blank=True, null=True)
    email = models.CharField(max_length=50, blank=True, null=True)
    skills_keywords = models.CharField(max_length=255, blank=True, null=True)
    obsolete = models.SmallIntegerField(blank=True, null=True)
    create_date = models.DateTimeField(blank=True, null=True)
    create_user = models.IntegerField(blank=True, null=True)
    update_date = models.DateTimeField(blank=True, null=True)
    update_user = models.IntegerField(blank=True, null=True)
    organization_id = models.IntegerField(blank=True, null=True)
    code = models.CharField(max_length=50, blank=True, null=True)
    history_comments = models.TextField(blank=True, null=True)
    current_latest_company = models.CharField(max_length=255, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'people'


class PickListReport(models.Model):
    name = models.CharField(max_length=255, blank=True, null=True)
    save_date = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'pick_list_report'


class PickListReportItems(models.Model):
    item_id = models.IntegerField(blank=True, null=True)
    qty = models.IntegerField(blank=True, null=True)
    pick_list_report_id = models.IntegerField(blank=True, null=True)
    sl10_name = models.CharField(max_length=255, blank=True, null=True)
    sl8_name = models.CharField(max_length=255, blank=True, null=True)
    sl9_name = models.CharField(max_length=255, blank=True, null=True)
    sl7_name = models.CharField(max_length=255, blank=True, null=True)
    name = models.CharField(max_length=255, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'pick_list_report_items'




class Prerequisite(models.Model):
    task_id = models.IntegerField()
    task_id_prerequisite = models.IntegerField()

    class Meta:
        managed = False
        db_table = 'prerequisite'





class Project(models.Model):
    organization_id = models.IntegerField(blank=True, null=True)
    name = models.CharField(max_length=50, blank=True, null=True)
    code = models.CharField(max_length=50, blank=True, null=True)
    project_administrator_id = models.IntegerField(blank=True, null=True)
    company_id = models.IntegerField(blank=True, null=True)
    city = models.CharField(max_length=50, blank=True, null=True)
    state = models.CharField(max_length=50, blank=True, null=True)
    country = models.CharField(max_length=50, blank=True, null=True)
    status = models.CharField(max_length=50, blank=True, null=True)
    cost = models.DecimalField(max_digits=19, decimal_places=4, blank=True, null=True)
    revenue = models.DecimalField(max_digits=19, decimal_places=4, blank=True, null=True)
    margin = models.DecimalField(max_digits=18, decimal_places=2, blank=True, null=True)
    email_address = models.CharField(max_length=50, blank=True, null=True)
    create_date = models.DateTimeField(blank=True, null=True)
    create_user = models.IntegerField(blank=True, null=True)
    update_date = models.DateTimeField(blank=True, null=True)
    update_user = models.IntegerField(blank=True, null=True)
    obsolete = models.SmallIntegerField(blank=True, null=True)
    item_name_track = models.CharField(max_length=10, blank=True, null=True)
    item_name_order = models.CharField(max_length=50, blank=True, null=True)
    item_name_table = models.CharField(max_length=10, blank=True, null=True)
    item_name_alias = models.CharField(max_length=50, blank=True, null=True)
    ta1_alias = models.CharField(max_length=50, blank=True, null=True)
    ta2_alias = models.CharField(max_length=50, blank=True, null=True)
    ta3_alias = models.CharField(max_length=50, blank=True, null=True)
    ta4_alias = models.CharField(max_length=50, blank=True, null=True)
    ta5_alias = models.CharField(max_length=50, blank=True, null=True)
    sl1_list = models.IntegerField(blank=True, null=True)
    sl1_alias = models.CharField(max_length=50, blank=True, null=True)
    sl2_list = models.IntegerField(blank=True, null=True)
    sl2_alias = models.CharField(max_length=50, blank=True, null=True)
    sl3_list = models.IntegerField(blank=True, null=True)
    sl3_alias = models.CharField(max_length=50, blank=True, null=True)
    sl4_list = models.IntegerField(blank=True, null=True)
    sl4_alias = models.CharField(max_length=50, blank=True, null=True)
    sl5_list = models.IntegerField(blank=True, null=True)
    sl5_alias = models.CharField(max_length=50, blank=True, null=True)
    customization = models.TextField(blank=True, null=True)
    role_management = models.TextField(blank=True, null=True)
    comments = models.TextField(blank=True, null=True)
    customer_feedback = models.TextField(blank=True, null=True)
    results = models.TextField(blank=True, null=True)
    building_id = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'project'


class ProjectAccessLevelUser(models.Model):
    project_access_level_id = models.IntegerField(blank=True, null=True)
    user_id = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'project_access_level_user'



class ProjectAccessPosition(models.Model):
    name = models.CharField(max_length=255, blank=True, null=True)
    project_id = models.IntegerField(blank=True, null=True)
    obsolete = models.SmallIntegerField(blank=True, null=True)
    desired_skill_keywords = models.CharField(max_length=1024, blank=True, null=True)
    create_date = models.DateTimeField(blank=True, null=True)
    create_user = models.IntegerField(blank=True, null=True)
    update_date = models.DateTimeField(blank=True, null=True)
    update_user = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'project_access_position'


class ProjectAccessPositionUser(models.Model):
    project_access_position_id = models.IntegerField(blank=True, null=True)
    user_id = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'project_access_position_user'



class ProjectAccessRole(models.Model):
    name = models.CharField(max_length=255, blank=True, null=True)
    project_id = models.IntegerField(blank=True, null=True)
    obsolete = models.SmallIntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'project_access_role'


class ProjectAccessRolePosition(models.Model):
    project_access_role_id = models.IntegerField(blank=True, null=True)
    project_access_position_id = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'project_access_role_position'




class ProjectAccessRoleUser(models.Model):
    project_access_role_id = models.IntegerField(blank=True, null=True)
    user_id = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'project_access_role_user'


class ProjectAccessRoleView(models.Model):
    project_access_role = models.IntegerField(blank=True, null=True)
    view_id = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'project_access_role_view'


class ProjectCompany(models.Model):
    project = models.ForeignKey(Project, models.DO_NOTHING, blank=True, null=True)
    name = models.CharField(max_length=50, blank=True, null=True)
    email_address = models.CharField(max_length=50, blank=True, null=True)
    create_date = models.DateTimeField(blank=True, null=True)
    create_user = models.IntegerField(blank=True, null=True)
    update_date = models.DateTimeField(blank=True, null=True)
    update_user = models.IntegerField(blank=True, null=True)
    description = models.CharField(max_length=50, blank=True, null=True)
    address = models.CharField(max_length=50, blank=True, null=True)
    phone = models.CharField(max_length=50, blank=True, null=True)
    abbreviation = models.CharField(max_length=50, blank=True, null=True)
    background_color = models.CharField(max_length=50, blank=True, null=True)
    text_color = models.CharField(max_length=10, blank=True, null=True)
    organization_id = models.IntegerField(blank=True, null=True)
    code = models.CharField(max_length=50, blank=True, null=True)
    comments = models.TextField(blank=True, null=True)
    obsolete = models.SmallIntegerField(blank=True, null=True)
    color_id = models.CharField(max_length=50, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'project_company'


class ProjectController(models.Model):
    project_id = models.IntegerField(blank=True, null=True)
    user_id = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'project_controller'



class ProjectEmailHelp(models.Model):
    email = models.CharField(max_length=255, blank=True, null=True)
    project_id = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'project_email_help'


class ProjectEmailHelpRequest(models.Model):
    comment = models.TextField(blank=True, null=True)  # This field type is a guess.
    component = models.CharField(max_length=255, blank=True, null=True)
    userid = models.CharField(max_length=255, blank=True, null=True)
    request_datetime = models.DateField(blank=True, null=True)
    project_id = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'project_email_help_request'




class ProjectMembership(models.Model):
    user_id = models.IntegerField(blank=True, null=True)
    project_id = models.IntegerField(blank=True, null=True)
    role = models.CharField(max_length=50, blank=True, null=True)
    create_user = models.IntegerField(blank=True, null=True)
    create_date = models.DateTimeField(blank=True, null=True)
    update_user = models.IntegerField(blank=True, null=True)
    update_date = models.DateTimeField(blank=True, null=True)
    project_role_id = models.IntegerField(blank=True, null=True)
    obsolete = models.SmallIntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'project_membership'



class ProjectMilestone(models.Model):
    project = models.ForeignKey(Project, models.DO_NOTHING, blank=True, null=True)
    name = models.CharField(max_length=50, blank=True, null=True)
    code = models.CharField(max_length=50, blank=True, null=True)
    create_date = models.DateTimeField(blank=True, null=True)
    create_user = models.IntegerField(blank=True, null=True)
    update_date = models.DateTimeField(blank=True, null=True)
    update_user = models.IntegerField(blank=True, null=True)
    order_within_project = models.FloatField(blank=True, null=True)
    item_id = models.IntegerField(blank=True, null=True)
    plan_date = models.DateField(blank=True, null=True)
    plan_ww = models.CharField(max_length=10, blank=True, null=True)
    plan_month = models.CharField(max_length=10, blank=True, null=True)
    forecast_date = models.DateField(blank=True, null=True)
    forecast_ww = models.CharField(max_length=10, blank=True, null=True)
    forecast_month = models.CharField(max_length=255, blank=True, null=True)
    actual_date = models.DateField(blank=True, null=True)
    actual_ww = models.CharField(max_length=10, blank=True, null=True)
    actual_month = models.CharField(max_length=10, blank=True, null=True)
    percent_complete = models.DecimalField(max_digits=10, decimal_places=2, blank=True, null=True)
    status = models.CharField(max_length=50, blank=True, null=True)
    comments = models.TextField(blank=True, null=True)
    obsolete = models.SmallIntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'project_milestone'


class ProjectNotification(models.Model):
    email = models.CharField(max_length=255, blank=True, null=True)
    status_trigger = models.CharField(max_length=255, blank=True, null=True)
    project_id = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'project_notification'


class ProjectPosition(models.Model):
    project_id = models.IntegerField(blank=True, null=True)
    name = models.CharField(max_length=50, blank=True, null=True)
    code = models.CharField(max_length=50, blank=True, null=True)
    create_date = models.DateTimeField(blank=True, null=True)
    create_user = models.IntegerField(blank=True, null=True)
    update_date = models.DateTimeField(blank=True, null=True)
    update_user = models.IntegerField(blank=True, null=True)
    desired_skill_keywords = models.CharField(max_length=50, blank=True, null=True)
    obsolete = models.SmallIntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'project_position'


class ProjectPositionAssignee(models.Model):
    project_id = models.IntegerField(blank=True, null=True)
    create_date = models.DateTimeField(blank=True, null=True)
    create_user = models.IntegerField(blank=True, null=True)
    update_date = models.DateTimeField(blank=True, null=True)
    update_user = models.IntegerField(blank=True, null=True)
    code = models.CharField(max_length=50, blank=True, null=True)
    position_type_id = models.IntegerField(blank=True, null=True)
    position_number = models.IntegerField(blank=True, null=True)
    desired_skills_keywords = models.CharField(max_length=50, blank=True, null=True)
    target_start_date = models.DateField(blank=True, null=True)
    estimated_completion_date = models.DateField(blank=True, null=True)
    assignee_people_id = models.IntegerField(blank=True, null=True)
    actual_start_date = models.DateField(blank=True, null=True)
    actual_completion_date = models.DateField(blank=True, null=True)
    assignment_status = models.CharField(max_length=50, blank=True, null=True)
    assigner_user_id = models.IntegerField(blank=True, null=True)
    supervisor_people_id = models.IntegerField(blank=True, null=True)
    name = models.CharField(max_length=255, blank=True, null=True)
    comments = models.TextField(blank=True, null=True)
    non_positional = models.SmallIntegerField(blank=True, null=True)
    obsolete = models.SmallIntegerField(blank=True, null=True)
    project_role_id = models.IntegerField(blank=True, null=True)
    assignee_user_id = models.IntegerField(blank=True, null=True)
    company_id = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'project_position_assignee'


class ProjectRole(models.Model):
    project_id = models.IntegerField(blank=True, null=True)
    create_date = models.DateTimeField(blank=True, null=True)
    create_user = models.IntegerField(blank=True, null=True)
    update_date = models.DateTimeField(blank=True, null=True)
    update_user = models.IntegerField(blank=True, null=True)
    code = models.CharField(max_length=50, blank=True, null=True)
    name = models.CharField(max_length=50, blank=True, null=True)
    comments = models.TextField(blank=True, null=True)
    position_type_id = models.IntegerField(blank=True, null=True)
    position_number = models.IntegerField(blank=True, null=True)
    desired_skills_keywords = models.CharField(max_length=1024, blank=True, null=True)
    target_start_date = models.DateField(blank=True, null=True)
    estimated_completion_date = models.DateField(blank=True, null=True)
    assignee_people_id = models.IntegerField(blank=True, null=True)
    actual_start_date = models.DateField(blank=True, null=True)
    actual_completion_date = models.DateField(blank=True, null=True)
    assignment_status = models.CharField(max_length=255, blank=True, null=True)
    assigner_user_id = models.IntegerField(blank=True, null=True)
    supervisor_people_id = models.IntegerField(blank=True, null=True)
    obsolete = models.IntegerField(blank=True, null=True)
    role_type = models.CharField(max_length=255, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'project_role'


class ProjectSelectionList(models.Model):
    project = models.ForeignKey(Project, models.DO_NOTHING, blank=True, null=True)
    name = models.CharField(max_length=100, blank=True, null=True)
    code = models.CharField(max_length=50, blank=True, null=True)
    create_date = models.DateTimeField(blank=True, null=True)
    create_user = models.IntegerField(blank=True, null=True)
    update_date = models.DateTimeField(blank=True, null=True)
    update_user = models.IntegerField(blank=True, null=True)
    obsolete = models.SmallIntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'project_selection_list'


class ProjectSelectionListItem(models.Model):
    project_selection_list_id = models.IntegerField(blank=True, null=True)
    name = models.CharField(max_length=125, blank=True, null=True)
    code = models.CharField(max_length=125, blank=True, null=True)
    create_date = models.DateTimeField(blank=True, null=True)
    create_user = models.IntegerField(blank=True, null=True)
    update_date = models.DateTimeField(blank=True, null=True)
    update_user = models.IntegerField(blank=True, null=True)
    obsolete = models.SmallIntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'project_selection_list_item'



class ProjectTaskGroup(models.Model):
    project_id = models.IntegerField(blank=True, null=True)
    name = models.CharField(max_length=50, blank=True, null=True)
    code = models.CharField(max_length=50, blank=True, null=True)
    create_date = models.DateTimeField(blank=True, null=True)
    create_user = models.IntegerField(blank=True, null=True)
    update_date = models.DateTimeField(blank=True, null=True)
    update_user = models.IntegerField(blank=True, null=True)
    task_group_within_project = models.FloatField(blank=True, null=True)
    obsolete = models.SmallIntegerField(blank=True, null=True)
    color_id = models.CharField(max_length=20, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'project_task_group'


class ProjectTaskPlanningGroup(models.Model):
    project = models.ForeignKey(Project, models.DO_NOTHING, blank=True, null=True)
    name = models.CharField(max_length=50, blank=True, null=True)
    code = models.CharField(max_length=50, blank=True, null=True)
    create_date = models.DateTimeField(blank=True, null=True)
    create_user = models.IntegerField(blank=True, null=True)
    update_date = models.DateTimeField(blank=True, null=True)
    update_user = models.IntegerField(blank=True, null=True)
    plan_duration = models.IntegerField(blank=True, null=True)
    duration_unit = models.CharField(max_length=50, blank=True, null=True)
    plan_labor_time = models.IntegerField(blank=True, null=True)
    plan_labor_qty = models.IntegerField(blank=True, null=True)
    plan_labor = models.IntegerField(blank=True, null=True)
    labor_unit = models.CharField(max_length=50, blank=True, null=True)
    plan_cost = models.DecimalField(max_digits=14, decimal_places=2, blank=True, null=True)
    cost_unit = models.CharField(max_length=50, blank=True, null=True)
    plan_difficulty = models.CharField(max_length=50, blank=True, null=True)
    difficulty_definition = models.CharField(max_length=50, blank=True, null=True)
    comments = models.TextField(blank=True, null=True)
    obsolete = models.SmallIntegerField(blank=True, null=True)
    color_id = models.CharField(max_length=20, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'project_task_planning_group'





class ProjectView(models.Model):
    organization_id = models.IntegerField(blank=True, null=True)
    name = models.CharField(max_length=50, blank=True, null=True)
    code = models.CharField(max_length=50, blank=True, null=True)
    project_administrator_id = models.IntegerField(blank=True, null=True)
    company_id = models.IntegerField(blank=True, null=True)
    city = models.CharField(max_length=50, blank=True, null=True)
    state = models.CharField(max_length=50, blank=True, null=True)
    country = models.CharField(max_length=50, blank=True, null=True)
    status = models.CharField(max_length=50, blank=True, null=True)
    cost = models.DecimalField(max_digits=19, decimal_places=4, blank=True, null=True)
    revenue = models.DecimalField(max_digits=19, decimal_places=4, blank=True, null=True)
    margin = models.DecimalField(max_digits=18, decimal_places=2, blank=True, null=True)
    comments = models.TextField(blank=True, null=True)  # This field type is a guess.
    email_address = models.CharField(max_length=50, blank=True, null=True)
    create_date = models.DateTimeField(blank=True, null=True)
    create_user = models.IntegerField(blank=True, null=True)
    update_date = models.DateTimeField(blank=True, null=True)
    update_user = models.IntegerField(blank=True, null=True)
    obsolete = models.SmallIntegerField(blank=True, null=True)
    item_name_track = models.CharField(max_length=10, blank=True, null=True)
    item_name_order = models.CharField(max_length=50, blank=True, null=True)
    item_name_table = models.CharField(max_length=10, blank=True, null=True)
    item_name_alias = models.CharField(max_length=50, blank=True, null=True)
    ta1_track = models.CharField(max_length=10, blank=True, null=True)
    ta1_order = models.CharField(max_length=50, blank=True, null=True)
    ta1_table = models.CharField(max_length=10, blank=True, null=True)
    ta1_alias = models.CharField(max_length=50, blank=True, null=True)
    ta2_track = models.CharField(max_length=10, blank=True, null=True)
    ta2_order = models.IntegerField(blank=True, null=True)
    ta2_table = models.CharField(max_length=10, blank=True, null=True)
    ta2_alias = models.CharField(max_length=50, blank=True, null=True)
    ta3_track = models.CharField(max_length=10, blank=True, null=True)
    ta3_order = models.IntegerField(blank=True, null=True)
    ta3_table = models.CharField(max_length=10, blank=True, null=True)
    ta3_alias = models.CharField(max_length=50, blank=True, null=True)
    ta4_track = models.CharField(max_length=10, blank=True, null=True)
    ta4_order = models.IntegerField(blank=True, null=True)
    ta4_table = models.CharField(max_length=10, blank=True, null=True)
    ta4_alias = models.CharField(max_length=50, blank=True, null=True)
    ta5_track = models.CharField(max_length=10, blank=True, null=True)
    ta5_order = models.IntegerField(blank=True, null=True)
    ta5_table = models.CharField(max_length=10, blank=True, null=True)
    ta5_alias = models.CharField(max_length=50, blank=True, null=True)
    ta6_track = models.CharField(max_length=10, blank=True, null=True)
    ta6_order = models.IntegerField(blank=True, null=True)
    ta6_table = models.CharField(max_length=10, blank=True, null=True)
    ta6_alias = models.CharField(max_length=50, blank=True, null=True)
    ta7_track = models.CharField(max_length=10, blank=True, null=True)
    ta7_order = models.IntegerField(blank=True, null=True)
    ta7_table = models.CharField(max_length=10, blank=True, null=True)
    ta7_alias = models.CharField(max_length=50, blank=True, null=True)
    ta8_track = models.CharField(max_length=10, blank=True, null=True)
    ta8_order = models.IntegerField(blank=True, null=True)
    ta8_table = models.CharField(max_length=10, blank=True, null=True)
    ta8_alias = models.CharField(max_length=50, blank=True, null=True)
    ta9_track = models.CharField(max_length=10, blank=True, null=True)
    ta9_order = models.IntegerField(blank=True, null=True)
    ta9_table = models.CharField(max_length=10, blank=True, null=True)
    ta9_alias = models.CharField(max_length=50, blank=True, null=True)
    ta10_track = models.CharField(max_length=10, blank=True, null=True)
    ta10_order = models.IntegerField(blank=True, null=True)
    ta10_table = models.CharField(max_length=10, blank=True, null=True)
    ta10_alias = models.CharField(max_length=50, blank=True, null=True)
    sl1_track = models.CharField(max_length=10, blank=True, null=True)
    sl1_list = models.IntegerField(blank=True, null=True)
    sl1_order = models.IntegerField(blank=True, null=True)
    sl1_table = models.CharField(max_length=10, blank=True, null=True)
    sl1_alias = models.CharField(max_length=50, blank=True, null=True)
    sl2_track = models.CharField(max_length=10, blank=True, null=True)
    sl2_list = models.IntegerField(blank=True, null=True)
    sl2_order = models.IntegerField(blank=True, null=True)
    sl2_table = models.CharField(max_length=10, blank=True, null=True)
    sl2_alias = models.CharField(max_length=50, blank=True, null=True)
    sl3_track = models.CharField(max_length=10, blank=True, null=True)
    sl3_list = models.IntegerField(blank=True, null=True)
    sl3_order = models.IntegerField(blank=True, null=True)
    sl3_table = models.CharField(max_length=10, blank=True, null=True)
    sl3_alias = models.CharField(max_length=50, blank=True, null=True)
    sl4_track = models.CharField(max_length=10, blank=True, null=True)
    sl4_list = models.IntegerField(blank=True, null=True)
    sl4_order = models.IntegerField(blank=True, null=True)
    sl4_table = models.CharField(max_length=10, blank=True, null=True)
    sl4_alias = models.CharField(max_length=50, blank=True, null=True)
    sl5_track = models.CharField(max_length=10, blank=True, null=True)
    sl5_list = models.IntegerField(blank=True, null=True)
    sl5_order = models.IntegerField(blank=True, null=True)
    sl5_table = models.CharField(max_length=10, blank=True, null=True)
    sl5_alias = models.CharField(max_length=50, blank=True, null=True)
    sl6_track = models.CharField(max_length=10, blank=True, null=True)
    sl6_list = models.IntegerField(blank=True, null=True)
    sl6_order = models.IntegerField(blank=True, null=True)
    sl6_table = models.CharField(max_length=10, blank=True, null=True)
    sl6_alias = models.CharField(max_length=50, blank=True, null=True)
    sl7_track = models.CharField(max_length=10, blank=True, null=True)
    sl7_list = models.IntegerField(blank=True, null=True)
    sl7_order = models.IntegerField(blank=True, null=True)
    sl7_table = models.CharField(max_length=10, blank=True, null=True)
    sl7_alias = models.CharField(max_length=50, blank=True, null=True)
    sl8_track = models.CharField(max_length=10, blank=True, null=True)
    sl8_list = models.IntegerField(blank=True, null=True)
    sl8_order = models.IntegerField(blank=True, null=True)
    sl8_table = models.CharField(max_length=10, blank=True, null=True)
    sl8_alias = models.CharField(max_length=50, blank=True, null=True)
    sl9_track = models.CharField(max_length=10, blank=True, null=True)
    sl9_list = models.IntegerField(blank=True, null=True)
    sl9_order = models.IntegerField(blank=True, null=True)
    sl9_table = models.CharField(max_length=10, blank=True, null=True)
    sl9_alias = models.CharField(max_length=50, blank=True, null=True)
    sl10_track = models.CharField(max_length=10, blank=True, null=True)
    sl10_list = models.IntegerField(blank=True, null=True)
    sl10_order = models.IntegerField(blank=True, null=True)
    sl10_table = models.CharField(max_length=10, blank=True, null=True)
    sl10_alias = models.CharField(max_length=50, blank=True, null=True)
    results = models.TextField(blank=True, null=True)  # This field type is a guess.
    customer_feedback = models.TextField(blank=True, null=True)  # This field type is a guess.
    sl1_table_tma = models.CharField(max_length=10, blank=True, null=True)
    sl2_table_tma = models.CharField(max_length=10, blank=True, null=True)
    sl3_table_tma = models.CharField(max_length=10, blank=True, null=True)
    sl4_table_tma = models.CharField(max_length=10, blank=True, null=True)
    sl5_table_tma = models.CharField(max_length=10, blank=True, null=True)
    sl6_table_tma = models.CharField(max_length=10, blank=True, null=True)
    sl7_table_tma = models.CharField(max_length=10, blank=True, null=True)
    sl8_table_tma = models.CharField(max_length=10, blank=True, null=True)
    sl9_table_tma = models.CharField(max_length=10, blank=True, null=True)
    sl10_table_tma = models.CharField(max_length=10, blank=True, null=True)
    ta1_table_tma = models.CharField(max_length=10, blank=True, null=True)
    ta2_table_tma = models.CharField(max_length=10, blank=True, null=True)
    ta3_table_tma = models.CharField(max_length=10, blank=True, null=True)
    ta4_table_tma = models.CharField(max_length=10, blank=True, null=True)
    ta5_table_tma = models.CharField(max_length=10, blank=True, null=True)
    ta6_table_tma = models.CharField(max_length=10, blank=True, null=True)
    ta7_table_tma = models.CharField(max_length=10, blank=True, null=True)
    ta8_table_tma = models.CharField(max_length=10, blank=True, null=True)
    ta9_table_tma = models.CharField(max_length=10, blank=True, null=True)
    ta10_table_tma = models.CharField(max_length=10, blank=True, null=True)
    sl1_width = models.IntegerField(blank=True, null=True)
    sl2_width = models.IntegerField(blank=True, null=True)
    sl3_width = models.IntegerField(blank=True, null=True)
    sl4_width = models.IntegerField(blank=True, null=True)
    sl5_width = models.IntegerField(blank=True, null=True)
    sl6_width = models.IntegerField(blank=True, null=True)
    sl7_width = models.IntegerField(blank=True, null=True)
    sl8_width = models.IntegerField(blank=True, null=True)
    sl9_width = models.IntegerField(blank=True, null=True)
    sl10_width = models.IntegerField(blank=True, null=True)
    ta1_width = models.IntegerField(blank=True, null=True)
    ta2_width = models.IntegerField(blank=True, null=True)
    ta3_width = models.IntegerField(blank=True, null=True)
    ta4_width = models.IntegerField(blank=True, null=True)
    ta5_width = models.IntegerField(blank=True, null=True)
    ta6_width = models.IntegerField(blank=True, null=True)
    ta7_width = models.IntegerField(blank=True, null=True)
    ta8_width = models.IntegerField(blank=True, null=True)
    ta9_width = models.IntegerField(blank=True, null=True)
    ta10_width = models.IntegerField(blank=True, null=True)
    guid = models.CharField(max_length=36, blank=True, null=True)
    customization = models.TextField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'project_view'



class Repository(models.Model):
    key = models.CharField(primary_key=True, max_length=200)
    objecttype = models.CharField(db_column='objectType', max_length=200, blank=True, null=True)  # Field name made lowercase.
    datestamp = models.DateTimeField(db_column='dateStamp')  # Field name made lowercase.
    componentguid = models.CharField(db_column='componentGUID', max_length=40, blank=True, null=True)  # Field name made lowercase.
    userid = models.CharField(db_column='userId', max_length=40, blank=True, null=True)  # Field name made lowercase.
    data = models.TextField()
    securitygroups = models.TextField(db_column='securityGroups')  # Field name made lowercase.

    class Meta:
        managed = False
        db_table = 'repository'


class SkillsKeywords(models.Model):
    create_date = models.DateTimeField(blank=True, null=True)
    create_user = models.IntegerField(blank=True, null=True)
    update_date = models.DateTimeField(blank=True, null=True)
    update_user = models.IntegerField(blank=True, null=True)
    name = models.CharField(max_length=50, blank=True, null=True)
    code = models.CharField(max_length=50, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'skills_keywords'


class SupportRequest(models.Model):
    comment = models.TextField(blank=True, null=True)  # This field type is a guess.
    component = models.CharField(max_length=255, blank=True, null=True)
    userid = models.CharField(max_length=255, blank=True, null=True)
    request_datetime = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'support_request'


class Task(models.Model):
    project = models.ForeignKey(Project, models.DO_NOTHING, blank=True, null=True)
    assignees = models.CharField(max_length=125, blank=True, null=True)
    task_order_within_project = models.CharField(max_length=125, blank=True, null=True)
    task = models.CharField(max_length=768, blank=True, null=True)
    task_group_order_within_project = models.FloatField(blank=True, null=True)
    task_group_id = models.IntegerField(blank=True, null=True)
    prerequisite_status = models.CharField(max_length=50, blank=True, null=True)
    task_parent_id = models.IntegerField(blank=True, null=True)
    start_days_prior_to_parent_plan_stop_date = models.DecimalField(max_digits=8, decimal_places=2, blank=True, null=True)
    stop_days_prior_to_parent_plan_stop_date = models.DecimalField(max_digits=8, decimal_places=2, blank=True, null=True)
    start_days_prior_to_parent_plan_start_date = models.DecimalField(max_digits=8, decimal_places=2, blank=True, null=True)
    stop_days_prior_to_parent_plan_start_date = models.DecimalField(max_digits=8, decimal_places=2, blank=True, null=True)
    milestone_id = models.IntegerField(blank=True, null=True)
    start_days_prior_to_milestone_plan_date = models.DecimalField(max_digits=8, decimal_places=2, blank=True, null=True)
    stop_days_prior_to_milestone_plan_date = models.DecimalField(max_digits=8, decimal_places=2, blank=True, null=True)
    task_planning_group_id_1 = models.IntegerField(blank=True, null=True)
    task_planning_group_id_2 = models.IntegerField(blank=True, null=True)
    item_id = models.IntegerField(blank=True, null=True)
    additional_data_type_form_id = models.IntegerField(blank=True, null=True)
    quantity = models.DecimalField(max_digits=8, decimal_places=2, blank=True, null=True)
    plan_start_date = models.DateField(blank=True, null=True)
    plan_start_ww = models.CharField(max_length=10, blank=True, null=True)
    plan_start_month = models.CharField(max_length=10, blank=True, null=True)
    forecast_start_date = models.DateField(blank=True, null=True)
    forecast_start_ww = models.CharField(max_length=10, blank=True, null=True)
    forecast_start_month = models.CharField(max_length=10, blank=True, null=True)
    actual_start_date = models.DateField(blank=True, null=True)
    actual_start_ww = models.CharField(max_length=10, blank=True, null=True)
    actual_start_month = models.CharField(max_length=10, blank=True, null=True)
    plan_stop_date = models.DateField(blank=True, null=True)
    plan_stop_ww = models.CharField(max_length=10, blank=True, null=True)
    plan_stop_month = models.CharField(max_length=10, blank=True, null=True)
    forecast_stop_date = models.DateField(blank=True, null=True)
    forecast_stop_ww = models.CharField(max_length=10, blank=True, null=True)
    forecast_stop_month = models.CharField(max_length=10, blank=True, null=True)
    actual_stop_date = models.DateField(blank=True, null=True)
    actual_stop_ww = models.CharField(max_length=10, blank=True, null=True)
    actual_stop_month = models.CharField(max_length=10, blank=True, null=True)
    priority_importance_definition = models.CharField(max_length=50, blank=True, null=True)
    priority_importance = models.CharField(max_length=50, blank=True, null=True)
    duration_unit = models.CharField(max_length=50, blank=True, null=True)
    plan_duration = models.CharField(max_length=50, blank=True, null=True)
    actual_duration = models.CharField(max_length=50, blank=True, null=True)
    cost_unit = models.CharField(max_length=50, blank=True, null=True)
    plan_cost = models.CharField(max_length=50, blank=True, null=True)
    actual_cost = models.CharField(max_length=50, blank=True, null=True)
    difficulty_definition = models.CharField(max_length=50, blank=True, null=True)
    plan_difficulty = models.CharField(max_length=50, blank=True, null=True)
    actual_difficulty = models.CharField(max_length=50, blank=True, null=True)
    labor_unit = models.CharField(max_length=50, blank=True, null=True)
    plan_labor_time = models.CharField(max_length=50, blank=True, null=True)
    plan_labor_qty = models.CharField(max_length=50, blank=True, null=True)
    plan_labor = models.CharField(max_length=50, blank=True, null=True)
    actual_labor_time = models.CharField(max_length=50, blank=True, null=True)
    actual_labor_qty = models.CharField(max_length=50, blank=True, null=True)
    actual_labor = models.CharField(max_length=50, blank=True, null=True)
    delivery_committed_to = models.CharField(max_length=50, blank=True, null=True)
    on_time_delivery = models.CharField(max_length=50, blank=True, null=True)
    otd_variance_details = models.CharField(max_length=50, blank=True, null=True)
    otd_variance_category = models.CharField(max_length=50, blank=True, null=True)
    percent_complete = models.DecimalField(max_digits=5, decimal_places=2, blank=True, null=True)
    task_status = models.CharField(max_length=50, blank=True, null=True)
    approval_disapproval_date = models.DateField(blank=True, null=True)
    approval_disapprover_id = models.IntegerField(blank=True, null=True)
    comments = models.TextField(blank=True, null=True)
    spare1 = models.TextField(blank=True, null=True)
    spare2 = models.TextField(blank=True, null=True)
    spare3 = models.TextField(blank=True, null=True)
    code = models.CharField(max_length=788, blank=True, null=True)
    company_id = models.IntegerField(blank=True, null=True)
    prerequisite_id = models.IntegerField(blank=True, null=True)
    people_id = models.IntegerField(blank=True, null=True)
    task_parent_name = models.CharField(max_length=768, blank=True, null=True)
    position_type_id = models.IntegerField(blank=True, null=True)
    user_id = models.IntegerField(blank=True, null=True)
    create_date = models.DateTimeField(blank=True, null=True)
    create_user = models.IntegerField(blank=True, null=True)
    update_date = models.DateTimeField(blank=True, null=True)
    update_user = models.IntegerField(blank=True, null=True)
    additional_data_type_form_instance_id = models.IntegerField(blank=True, null=True)
    additional_data_type_form_name = models.CharField(max_length=255, blank=True, null=True)
    obsolete = models.SmallIntegerField(blank=True, null=True)
    project_position_assignee_id = models.IntegerField(blank=True, null=True)
    project_role_id = models.IntegerField(blank=True, null=True)
    ta1 = models.CharField(max_length=255, blank=True, null=True)
    ta2 = models.CharField(max_length=255, blank=True, null=True)
    ta3 = models.CharField(max_length=255, blank=True, null=True)
    ta4 = models.CharField(max_length=255, blank=True, null=True)
    ta5 = models.CharField(max_length=255, blank=True, null=True)
    sl1 = models.IntegerField(blank=True, null=True)
    sl2 = models.IntegerField(blank=True, null=True)
    sl3 = models.IntegerField(blank=True, null=True)
    sl4 = models.IntegerField(blank=True, null=True)
    sl5 = models.IntegerField(blank=True, null=True)
    task_details = models.CharField(max_length=1024, blank=True, null=True)
    days_required_to_complete = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'task'





class Task10172022(models.Model):
    project = models.ForeignKey(Project, models.DO_NOTHING, blank=True, null=True)
    assignees = models.CharField(max_length=125, blank=True, null=True)
    task_order_within_project = models.CharField(max_length=125, blank=True, null=True)
    task = models.CharField(max_length=768, blank=True, null=True)
    task_group_order_within_project = models.FloatField(blank=True, null=True)
    task_group_id = models.IntegerField(blank=True, null=True)
    prerequisite_status = models.CharField(max_length=50, blank=True, null=True)
    task_parent_id = models.IntegerField(blank=True, null=True)
    start_days_prior_to_parent_plan_stop_date = models.DecimalField(max_digits=8, decimal_places=2, blank=True, null=True)
    stop_days_prior_to_parent_plan_stop_date = models.DecimalField(max_digits=8, decimal_places=2, blank=True, null=True)
    start_days_prior_to_parent_plan_start_date = models.DecimalField(max_digits=8, decimal_places=2, blank=True, null=True)
    stop_days_prior_to_parent_plan_start_date = models.DecimalField(max_digits=8, decimal_places=2, blank=True, null=True)
    milestone_id = models.IntegerField(blank=True, null=True)
    start_days_prior_to_milestone_plan_date = models.DecimalField(max_digits=8, decimal_places=2, blank=True, null=True)
    stop_days_prior_to_milestone_plan_date = models.DecimalField(max_digits=8, decimal_places=2, blank=True, null=True)
    task_planning_group_id_1 = models.IntegerField(blank=True, null=True)
    task_planning_group_id_2 = models.IntegerField(blank=True, null=True)
    item_id = models.IntegerField(blank=True, null=True)
    additional_data_type_form_id = models.IntegerField(blank=True, null=True)
    quantity = models.DecimalField(max_digits=8, decimal_places=2, blank=True, null=True)
    plan_start_date = models.DateField(blank=True, null=True)
    plan_start_ww = models.CharField(max_length=10, blank=True, null=True)
    plan_start_month = models.CharField(max_length=10, blank=True, null=True)
    forecast_start_date = models.DateField(blank=True, null=True)
    forecast_start_ww = models.CharField(max_length=10, blank=True, null=True)
    forecast_start_month = models.CharField(max_length=10, blank=True, null=True)
    actual_start_date = models.DateField(blank=True, null=True)
    actual_start_ww = models.CharField(max_length=10, blank=True, null=True)
    actual_start_month = models.CharField(max_length=10, blank=True, null=True)
    plan_stop_date = models.DateField(blank=True, null=True)
    plan_stop_ww = models.CharField(max_length=10, blank=True, null=True)
    plan_stop_month = models.CharField(max_length=10, blank=True, null=True)
    forecast_stop_date = models.DateField(blank=True, null=True)
    forecast_stop_ww = models.CharField(max_length=10, blank=True, null=True)
    forecast_stop_month = models.CharField(max_length=10, blank=True, null=True)
    actual_stop_date = models.DateField(blank=True, null=True)
    actual_stop_ww = models.CharField(max_length=10, blank=True, null=True)
    actual_stop_month = models.CharField(max_length=10, blank=True, null=True)
    priority_importance_definition = models.CharField(max_length=50, blank=True, null=True)
    priority_importance = models.CharField(max_length=50, blank=True, null=True)
    duration_unit = models.CharField(max_length=50, blank=True, null=True)
    plan_duration = models.CharField(max_length=50, blank=True, null=True)
    actual_duration = models.CharField(max_length=50, blank=True, null=True)
    cost_unit = models.CharField(max_length=50, blank=True, null=True)
    plan_cost = models.CharField(max_length=50, blank=True, null=True)
    actual_cost = models.CharField(max_length=50, blank=True, null=True)
    difficulty_definition = models.CharField(max_length=50, blank=True, null=True)
    plan_difficulty = models.CharField(max_length=50, blank=True, null=True)
    actual_difficulty = models.CharField(max_length=50, blank=True, null=True)
    labor_unit = models.CharField(max_length=50, blank=True, null=True)
    plan_labor_time = models.CharField(max_length=50, blank=True, null=True)
    plan_labor_qty = models.CharField(max_length=50, blank=True, null=True)
    plan_labor = models.CharField(max_length=50, blank=True, null=True)
    actual_labor_time = models.CharField(max_length=50, blank=True, null=True)
    actual_labor_qty = models.CharField(max_length=50, blank=True, null=True)
    actual_labor = models.CharField(max_length=50, blank=True, null=True)
    delivery_committed_to = models.CharField(max_length=50, blank=True, null=True)
    on_time_delivery = models.CharField(max_length=50, blank=True, null=True)
    otd_variance_details = models.CharField(max_length=50, blank=True, null=True)
    otd_variance_category = models.CharField(max_length=50, blank=True, null=True)
    percent_complete = models.DecimalField(max_digits=5, decimal_places=2, blank=True, null=True)
    task_status = models.CharField(max_length=50, blank=True, null=True)
    approval_disapproval_date = models.DateField(blank=True, null=True)
    approval_disapprover_id = models.IntegerField(blank=True, null=True)
    comments = models.TextField(blank=True, null=True)
    spare1 = models.TextField(blank=True, null=True)
    spare2 = models.TextField(blank=True, null=True)
    spare3 = models.TextField(blank=True, null=True)
    code = models.CharField(max_length=788, blank=True, null=True)
    company_id = models.IntegerField(blank=True, null=True)
    prerequisite_id = models.IntegerField(blank=True, null=True)
    people_id = models.IntegerField(blank=True, null=True)
    task_parent_name = models.CharField(max_length=768, blank=True, null=True)
    position_type_id = models.IntegerField(blank=True, null=True)
    user_id = models.IntegerField(blank=True, null=True)
    create_date = models.DateTimeField(blank=True, null=True)
    create_user = models.IntegerField(blank=True, null=True)
    update_date = models.DateTimeField(blank=True, null=True)
    update_user = models.IntegerField(blank=True, null=True)
    additional_data_type_form_instance_id = models.IntegerField(blank=True, null=True)
    additional_data_type_form_name = models.CharField(max_length=255, blank=True, null=True)
    obsolete = models.SmallIntegerField(blank=True, null=True)
    project_position_assignee_id = models.IntegerField(blank=True, null=True)
    project_role_id = models.IntegerField(blank=True, null=True)
    ta1 = models.CharField(max_length=255, blank=True, null=True)
    ta2 = models.CharField(max_length=255, blank=True, null=True)
    ta3 = models.CharField(max_length=255, blank=True, null=True)
    ta4 = models.CharField(max_length=255, blank=True, null=True)
    ta5 = models.CharField(max_length=255, blank=True, null=True)
    sl1 = models.IntegerField(blank=True, null=True)
    sl2 = models.IntegerField(blank=True, null=True)
    sl3 = models.IntegerField(blank=True, null=True)
    sl4 = models.IntegerField(blank=True, null=True)
    sl5 = models.IntegerField(blank=True, null=True)
    task_details = models.CharField(max_length=1024, blank=True, null=True)
    days_required_to_complete = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'task_10172022'



class TempBuildingItemReport(models.Model):
    name = models.CharField(max_length=255, blank=True, null=True)
    value = models.CharField(max_length=255, blank=True, null=True)
    task_group = models.CharField(max_length=255, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'temp_building_item_report'


class Textdict(models.Model):
    key = models.CharField(primary_key=True, max_length=100)
    language = models.CharField(max_length=40)
    data = models.TextField()

    class Meta:
        managed = False
        db_table = 'textdict'
        unique_together = (('key', 'language'),)


class User(models.Model):
    userid = models.CharField(max_length=50, blank=True, null=True)
    name_first = models.CharField(max_length=50, blank=True, null=True)
    name_last = models.CharField(max_length=50, blank=True, null=True)
    company_id = models.IntegerField(blank=True, null=True)
    email = models.CharField(max_length=50, blank=True, null=True)
    universal_project_controller = models.CharField(max_length=4, blank=True, null=True)
    last_login = models.DateTimeField(blank=True, null=True)
    active = models.SmallIntegerField(blank=True, null=True)
    email_verification = models.SmallIntegerField(blank=True, null=True)
    email_verification_code = models.CharField(max_length=50, blank=True, null=True)
    create_date = models.DateTimeField(blank=True, null=True)
    create_user = models.IntegerField(blank=True, null=True)
    update_date = models.DateTimeField(blank=True, null=True)
    update_user = models.IntegerField(blank=True, null=True)
    organization_id = models.IntegerField(blank=True, null=True)
    role_primary = models.CharField(max_length=50, blank=True, null=True)
    resume_file_name = models.CharField(max_length=50, blank=True, null=True)
    current_latest_company = models.CharField(max_length=50, blank=True, null=True)
    current_latest_position = models.CharField(max_length=50, blank=True, null=True)
    city = models.CharField(max_length=50, blank=True, null=True)
    state = models.CharField(max_length=50, blank=True, null=True)
    country = models.CharField(max_length=50, blank=True, null=True)
    phone = models.CharField(max_length=50, blank=True, null=True)
    skills_keywords = models.CharField(max_length=50, blank=True, null=True)
    obsolete = models.SmallIntegerField(blank=True, null=True)
    code = models.CharField(max_length=50, blank=True, null=True)
    login_disabled = models.SmallIntegerField(blank=True, null=True)
    project_membership = models.CharField(max_length=255, blank=True, null=True)
    project_membership_json = models.TextField(blank=True, null=True)
    ux_memory = models.TextField(blank=True, null=True)
    task_datatable_view_id = models.IntegerField(blank=True, null=True)
    current_project_id = models.IntegerField(blank=True, null=True)
    history_comments = models.TextField(blank=True, null=True)
    pref_datatable_width = models.IntegerField(blank=True, null=True)
    pref_datatable_height = models.IntegerField(blank=True, null=True)
    app_item_project_id = models.IntegerField(blank=True, null=True)
    app_item_view_id = models.IntegerField(blank=True, null=True)
    app_building_view_id = models.IntegerField(blank=True, null=True)
    app_building_item_selected_building_id = models.IntegerField(blank=True, null=True)
    app_building_item_selected_view_id = models.IntegerField(blank=True, null=True)
    app_task_selected_project_id = models.IntegerField(blank=True, null=True)
    app_task_selected_view_id = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'user'


class View(models.Model):
    name = models.CharField(max_length=255, blank=True, null=True)
    app = models.CharField(max_length=255, blank=True, null=True)
    filter_sql = models.TextField(blank=True, null=True)
    filter_user_only = models.CharField(max_length=10, blank=True, null=True)
    enable_obsolete = models.SmallIntegerField(blank=True, null=True)
    enable_attach_files = models.SmallIntegerField(blank=True, null=True)
    enable_add_children = models.SmallIntegerField(blank=True, null=True)
    enable_add_constraint = models.SmallIntegerField(blank=True, null=True)
    enable_clone_task = models.SmallIntegerField(blank=True, null=True)
    obsolete = models.SmallIntegerField(blank=True, null=True)
    enable_item_null = models.SmallIntegerField(blank=True, null=True)
    parent_id = models.IntegerField(blank=True, null=True)
    parent_app = models.CharField(max_length=255, blank=True, null=True)
    view_name = models.CharField(max_length=255, blank=True, null=True)
    category = models.CharField(max_length=20, blank=True, null=True)
    default_sort = models.CharField(max_length=255, blank=True, null=True)
    building_id = models.IntegerField(blank=True, null=True)
    project_id = models.IntegerField(blank=True, null=True)
    comments = models.CharField(max_length=1024, blank=True, null=True)
    enable_add_link = models.SmallIntegerField(blank=True, null=True)
    filter_conditions = models.TextField(blank=True, null=True)  # This field type is a guess.
    enable_clone_item = models.SmallIntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'view'


class ViewField(models.Model):
    column_name = models.CharField(max_length=255, blank=True, null=True)
    alias = models.CharField(max_length=255, blank=True, null=True)
    column_width = models.IntegerField(blank=True, null=True)
    column_order = models.IntegerField(blank=True, null=True)
    visible = models.SmallIntegerField(blank=True, null=True)
    cssformat = models.CharField(db_column='cssFormat', max_length=255, blank=True, null=True)  # Field name made lowercase.
    column_system_name = models.CharField(max_length=255, blank=True, null=True)
    column_view_name = models.CharField(max_length=255, blank=True, null=True)
    column_sort_method = models.CharField(max_length=255, blank=True, null=True)
    field_type = models.CharField(max_length=255, blank=True, null=True)
    field_selection_list = models.IntegerField(blank=True, null=True)
    view = models.ForeignKey(View, models.DO_NOTHING, blank=True, null=True)
    form_visible = models.SmallIntegerField(blank=True, null=True)
    form_enabled = models.SmallIntegerField(blank=True, null=True)
    app = models.CharField(max_length=255, blank=True, null=True)
    hidden = models.SmallIntegerField(blank=True, null=True)
    filter_visible = models.SmallIntegerField(blank=True, null=True)
    view_editor_enabled = models.SmallIntegerField(blank=True, null=True)
    excel_filter = models.SmallIntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'view_field'


class ViewFieldTemplate(models.Model):
    column_name = models.CharField(max_length=255, blank=True, null=True)
    alias = models.CharField(max_length=255, blank=True, null=True)
    column_width = models.IntegerField(blank=True, null=True)
    column_order = models.IntegerField(blank=True, null=True)
    visible = models.SmallIntegerField(blank=True, null=True)
    cssformat = models.CharField(db_column='cssFormat', max_length=255, blank=True, null=True)  # Field name made lowercase.
    column_system_name = models.CharField(max_length=255, blank=True, null=True)
    column_view_name = models.CharField(max_length=255, blank=True, null=True)
    column_sort_method = models.CharField(max_length=255, blank=True, null=True)
    field_type = models.CharField(max_length=255, blank=True, null=True)
    field_selection_list = models.IntegerField(blank=True, null=True)
    view_id = models.IntegerField(blank=True, null=True)
    form_visible = models.SmallIntegerField(blank=True, null=True)
    form_enabled = models.SmallIntegerField(blank=True, null=True)
    app = models.CharField(max_length=255, blank=True, null=True)
    hidden = models.SmallIntegerField(blank=True, null=True)
    filter_visible = models.SmallIntegerField(blank=True, null=True)
    view_editor_enabled = models.SmallIntegerField(blank=True, null=True)
    excel_filter = models.SmallIntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'view_field_template'


class Websecurityexpired(models.Model):
    user_guid = models.CharField(db_column='User_Guid', primary_key=True, max_length=36)  # Field name made lowercase.
    password = models.CharField(db_column='Password', max_length=60, blank=True, null=True)  # Field name made lowercase.
    lastused = models.DateTimeField(db_column='Lastused')  # Field name made lowercase.

    class Meta:
        managed = False
        db_table = 'websecurityexpired'
        unique_together = (('user_guid', 'lastused'),)


class Websecuritygroups(models.Model):
    group_guid = models.CharField(db_column='Group_Guid', primary_key=True, max_length=36)  # Field name made lowercase.
    group_name = models.CharField(db_column='Group_Name', max_length=60)  # Field name made lowercase.
    updweb = models.DateTimeField(db_column='Updweb', blank=True, null=True)  # Field name made lowercase.
    updlocal = models.DateTimeField(db_column='Updlocal', blank=True, null=True)  # Field name made lowercase.

    class Meta:
        managed = False
        db_table = 'websecuritygroups'


class Websecuritymembers(models.Model):
    group_guid = models.CharField(db_column='Group_Guid', primary_key=True, max_length=36)  # Field name made lowercase.
    user_guid = models.CharField(db_column='User_Guid', max_length=36)  # Field name made lowercase.
    updweb = models.DateTimeField(db_column='Updweb', blank=True, null=True)  # Field name made lowercase.
    updlocal = models.DateTimeField(db_column='Updlocal', blank=True, null=True)  # Field name made lowercase.

    class Meta:
        managed = False
        db_table = 'websecuritymembers'
        unique_together = (('group_guid', 'user_guid'),)


class Websecurityusers(models.Model):
    guid = models.CharField(db_column='Guid', primary_key=True, max_length=36)  # Field name made lowercase.
    userid = models.CharField(db_column='Userid', max_length=250)  # Field name made lowercase.
    password = models.CharField(db_column='Password', max_length=60, blank=True, null=True)  # Field name made lowercase.
    rememberme = models.BooleanField(db_column='Rememberme', blank=True, null=True)  # Field name made lowercase.
    redirpage = models.CharField(db_column='Redirpage', max_length=60, blank=True, null=True)  # Field name made lowercase.
    passent = models.DateTimeField(db_column='Passent', blank=True, null=True)  # Field name made lowercase.
    passexp = models.DateTimeField(db_column='Passexp', blank=True, null=True)  # Field name made lowercase.
    email = models.CharField(db_column='Email', max_length=250, blank=True, null=True)  # Field name made lowercase.
    secques = models.CharField(db_column='Secques', max_length=100, blank=True, null=True)  # Field name made lowercase.
    secans = models.CharField(db_column='Secans', max_length=60, blank=True, null=True)  # Field name made lowercase.
    updweb = models.DateTimeField(db_column='Updweb', blank=True, null=True)  # Field name made lowercase.
    updlocal = models.DateTimeField(db_column='Updlocal', blank=True, null=True)  # Field name made lowercase.
    ulink = models.CharField(db_column='Ulink', max_length=40, blank=True, null=True)  # Field name made lowercase.

    class Meta:
        managed = False
        db_table = 'websecurityusers'










INSERT INTO core_building SELECT * FROM building
INSERT INTO core_building_item SELECT * FROM building_item
INSERT INTO core_building_selection_list SELECT * FROM building_selection_list
INSERT INTO core_building_selection_list_item SELECT * FROM building_selection_list_item
INSERT INTO core_project SELECT * FROM project
INSERT INTO core_project_selection_list SELECT * FROM project_selection_list
INSERT INTO core_project_selection_list_item SELECT * FROM project_selection_list_item
INSERT INTO core_skills_keywords SELECT * FROM skills_keywords
INSERT INTO core_task SELECT * FROM task
INSERT INTO core_non_working_days SELECT * FROM non_working_days
INSERT INTO core_organization SELECT * FROM organization
INSERT INTO core_people SELECT * FROM people
INSERT INTO core_support_request SELECT * FROM support_request
INSERT INTO core_view_field SELECT * FROM view_field
INSERT INTO core_color_master SELECT * FROM color_master
INSERT INTO core_menu_system SELECT * FROM menu_system
INSERT INTO core_ SELECT * FROM 
INSERT INTO core_ SELECT * FROM 
INSERT INTO core_ SELECT * FROM 


INSERT INTO core_file SELECT * FROM file
INSERT INTO core_view SELECT * FROM view